{"ast":null,"code":"import * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    transition: Transition = ToastFade,\n    show = true,\n    animation = true,\n    delay = 5000,\n    autohide = false,\n    onClose,\n    bg,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n\n  const toast = /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useCallback","classNames","useTimeout","ToastFade","ToastHeader","ToastBody","useBootstrapPrefix","ToastContext","jsx","_jsx","Toast","forwardRef","ref","bsPrefix","className","transition","Transition","show","animation","delay","autohide","onClose","bg","props","delayRef","onCloseRef","current","autohideTimeout","autohideToast","autohideFunc","set","toastContext","hasAnimation","toast","role","Provider","value","children","in","unmountOnExit","displayName","Object","assign","Body","Header"],"sources":["/Users/suhakesikbas/Desktop/hypancee/HypanceFrontend/node_modules/react-bootstrap/esm/Toast.js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast'); // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n\n  const toast = /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}