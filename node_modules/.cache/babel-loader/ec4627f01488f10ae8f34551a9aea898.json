{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    type,\n    size,\n    htmlSize,\n    id,\n    className,\n    isValid = false,\n    isInvalid = false,\n    plaintext,\n    readOnly,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'input',\n    ...props\n  } = _ref;\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","map":{"version":3,"names":["classNames","React","useContext","warning","Feedback","FormContext","useBootstrapPrefix","jsx","_jsx","FormControl","forwardRef","ref","bsPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","as","Component","props","controlId","classes","process","env","NODE_ENV","displayName","Object","assign"],"sources":["/Users/suhakesikbas/Desktop/hypancee/HypanceFrontend/node_modules/react-bootstrap/esm/FormControl.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,WAAW,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,OAc/CC,GAd+C,KAcvC;EAAA,IAdwC;IACjDC,QADiD;IAEjDC,IAFiD;IAGjDC,IAHiD;IAIjDC,QAJiD;IAKjDC,EALiD;IAMjDC,SANiD;IAOjDC,OAAO,GAAG,KAPuC;IAQjDC,SAAS,GAAG,KARqC;IASjDC,SATiD;IAUjDC,QAViD;IAWjD;IACAC,EAAE,EAAEC,SAAS,GAAG,OAZiC;IAajD,GAAGC;EAb8C,CAcxC;EACT,MAAM;IACJC;EADI,IAEFvB,UAAU,CAACG,WAAD,CAFd;EAGAO,QAAQ,GAAGN,kBAAkB,CAACM,QAAD,EAAW,cAAX,CAA7B;EACA,IAAIc,OAAJ;;EAEA,IAAIN,SAAJ,EAAe;IACbM,OAAO,GAAG;MACR,CAAE,GAAEd,QAAS,YAAb,GAA2B;IADnB,CAAV;EAGD,CAJD,MAIO;IACLc,OAAO,GAAG;MACR,CAACd,QAAD,GAAY,IADJ;MAER,CAAE,GAAEA,QAAS,IAAGE,IAAK,EAArB,GAAyBA;IAFjB,CAAV;EAID;;EAEDa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC1B,OAAO,CAACsB,SAAS,IAAI,IAAb,IAAqB,CAACT,EAAvB,EAA2B,mEAA3B,CAA/C,GAAiJ,KAAK,CAAtJ;EACA,OAAO,aAAaR,IAAI,CAACe,SAAD,EAAY,EAAE,GAAGC,KAAL;IAClCX,IAAI,EAAEA,IAD4B;IAElCC,IAAI,EAAEC,QAF4B;IAGlCJ,GAAG,EAAEA,GAH6B;IAIlCU,QAAQ,EAAEA,QAJwB;IAKlCL,EAAE,EAAEA,EAAE,IAAIS,SALwB;IAMlCR,SAAS,EAAEjB,UAAU,CAACiB,SAAD,EAAYS,OAAZ,EAAqBR,OAAO,IAAK,UAAjC,EAA4CC,SAAS,IAAK,YAA1D,EAAuEN,IAAI,KAAK,OAAT,IAAqB,GAAED,QAAS,QAAvG;EANa,CAAZ,CAAxB;AAQD,CAzCgC,CAAjC;AA0CAH,WAAW,CAACqB,WAAZ,GAA0B,aAA1B;AACA,eAAeC,MAAM,CAACC,MAAP,CAAcvB,WAAd,EAA2B;EACxCL;AADwC,CAA3B,CAAf"},"metadata":{},"sourceType":"module"}