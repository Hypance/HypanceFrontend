{"ast":null,"code":"/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n\nvar preferredCharsets = require('./lib/charset');\n\nvar preferredEncodings = require('./lib/encoding');\n\nvar preferredLanguages = require('./lib/language');\n\nvar preferredMediaTypes = require('./lib/mediaType');\n/**\n * Module exports.\n * @public\n */\n\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept, available);\n}; // Backwards compatibility\n\n\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;","map":{"version":3,"names":["preferredCharsets","require","preferredEncodings","preferredLanguages","preferredMediaTypes","module","exports","Negotiator","request","prototype","charset","available","set","charsets","headers","encoding","encodings","language","languages","mediaType","mediaTypes","accept","preferredCharset","preferredEncoding","preferredLanguage","preferredMediaType"],"sources":["/Users/suhakesikbas/Desktop/hypancee/HypanceFrontend/node_modules/negotiator/index.js"],"sourcesContent":["/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nvar preferredCharsets = require('./lib/charset')\nvar preferredEncodings = require('./lib/encoding')\nvar preferredLanguages = require('./lib/language')\nvar preferredMediaTypes = require('./lib/mediaType')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}