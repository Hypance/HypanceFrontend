{"ast":null,"code":"/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors');\n\nvar setPrototypeOf = require('setprototypeof');\n\nvar statuses = require('statuses');\n\nvar inherits = require('inherits');\n\nvar toIdentifier = require('toidentifier');\n/**\n * Module exports.\n * @public\n */\n\n\nmodule.exports = createError;\nmodule.exports.HttpError = createHttpErrorConstructor();\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError); // Populate exports for all constructors\n\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError);\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass(status) {\n  return Number(String(status).charAt(0) + '00');\n}\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\n\nfunction createError() {\n  // so much arity going on ~_~\n  var err;\n  var msg;\n  var status = 500;\n  var props = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    var type = typeof arg;\n\n    if (type === 'object' && arg instanceof Error) {\n      err = arg;\n      status = err.status || err.statusCode || status;\n    } else if (type === 'number' && i === 0) {\n      status = arg;\n    } else if (type === 'string') {\n      msg = arg;\n    } else if (type === 'object') {\n      props = arg;\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type);\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes');\n  }\n\n  if (typeof status !== 'number' || !statuses.message[status] && (status < 400 || status >= 600)) {\n    status = 500;\n  } // constructor\n\n\n  var HttpError = createError[status] || createError[codeClass(status)];\n\n  if (!err) {\n    // create error\n    err = HttpError ? new HttpError(msg) : new Error(msg || statuses.message[status]);\n    Error.captureStackTrace(err, createError);\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500;\n    err.status = err.statusCode = status;\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key];\n    }\n  }\n\n  return err;\n}\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\n\nfunction createHttpErrorConstructor() {\n  function HttpError() {\n    throw new TypeError('cannot construct abstract class');\n  }\n\n  inherits(HttpError, Error);\n  return HttpError;\n}\n/**\n * Create a constructor for a client error.\n * @private\n */\n\n\nfunction createClientErrorConstructor(HttpError, name, code) {\n  var className = toClassName(name);\n\n  function ClientError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ClientError); // adjust the [[Prototype]]\n\n    setPrototypeOf(err, ClientError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(ClientError, HttpError);\n  nameFunc(ClientError, className);\n  ClientError.prototype.status = code;\n  ClientError.prototype.statusCode = code;\n  ClientError.prototype.expose = true;\n  return ClientError;\n}\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\n\nfunction createIsHttpErrorFunction(HttpError) {\n  return function isHttpError(val) {\n    if (!val || typeof val !== 'object') {\n      return false;\n    }\n\n    if (val instanceof HttpError) {\n      return true;\n    }\n\n    return val instanceof Error && typeof val.expose === 'boolean' && typeof val.statusCode === 'number' && val.status === val.statusCode;\n  };\n}\n/**\n * Create a constructor for a server error.\n * @private\n */\n\n\nfunction createServerErrorConstructor(HttpError, name, code) {\n  var className = toClassName(name);\n\n  function ServerError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ServerError); // adjust the [[Prototype]]\n\n    setPrototypeOf(err, ServerError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(ServerError, HttpError);\n  nameFunc(ServerError, className);\n  ServerError.prototype.status = code;\n  ServerError.prototype.statusCode = code;\n  ServerError.prototype.expose = false;\n  return ServerError;\n}\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\n\nfunction nameFunc(func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name');\n\n  if (desc && desc.configurable) {\n    desc.value = name;\n    Object.defineProperty(func, 'name', desc);\n  }\n}\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\n\nfunction populateConstructorExports(exports, codes, HttpError) {\n  codes.forEach(function forEachCode(code) {\n    var CodeError;\n    var name = toIdentifier(statuses.message[code]);\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code);\n        break;\n\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code);\n        break;\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError;\n      exports[name] = CodeError;\n    }\n  });\n}\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\n\nfunction toClassName(name) {\n  return name.substr(-5) !== 'Error' ? name + 'Error' : name;\n}","map":{"version":3,"names":["deprecate","require","setPrototypeOf","statuses","inherits","toIdentifier","module","exports","createError","HttpError","createHttpErrorConstructor","isHttpError","createIsHttpErrorFunction","populateConstructorExports","codes","codeClass","status","Number","String","charAt","err","msg","props","i","arguments","length","arg","type","Error","statusCode","TypeError","message","captureStackTrace","expose","key","createClientErrorConstructor","name","code","className","toClassName","ClientError","prototype","Object","defineProperty","enumerable","configurable","value","writable","nameFunc","val","createServerErrorConstructor","ServerError","func","desc","getOwnPropertyDescriptor","forEach","forEachCode","CodeError","substr"],"sources":["/Users/suhakesikbas/Desktop/hypancee/HypanceFrontend/node_modules/http-errors/index.js"],"sourcesContent":["/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    var type = typeof arg\n    if (type === 'object' && arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n    } else if (type === 'number' && i === 0) {\n      status = arg\n    } else if (type === 'string') {\n      msg = arg\n    } else if (type === 'object') {\n      props = arg\n    } else {\n      throw new TypeError('argument #' + (i + 1) + ' unsupported type ' + type)\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses.message[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses.message[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses.message[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses.message[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}